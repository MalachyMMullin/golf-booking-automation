name: Weekly golf booking (Sydney 7 pm Thu)

on:
  schedule:
    # Run at 07:30 UTC and 08:30 UTC every Thursday
    # (keeps the job live well before the 19:00 Sydney unlock even with cron lag)
    - cron: "30 7 * * 4"
    - cron: "30 8 * * 4"
  workflow_dispatch: {}  # allows manual run

jobs:
  book:
    runs-on: ubuntu-latest
    timeout-minutes: 50
    concurrency:
      group: golf-booking
      cancel-in-progress: false
    env:
      TZ: Australia/Sydney
      HEADLESS: "true"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Google Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable

      - name: Install Chromedriver
        uses: nanasess/setup-chromedriver@v2

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run booking script
        env:
          MIGOLF_USER_1: ${{ secrets.MIGOLF_USER_1 }}
          MIGOLF_PASS_1: ${{ secrets.MIGOLF_PASS_1 }}
          MIGOLF_USER_2: ${{ secrets.MIGOLF_USER_2 }}
          MIGOLF_PASS_2: ${{ secrets.MIGOLF_PASS_2 }}
          MIGOLF_USER_3: ${{ secrets.MIGOLF_USER_3 }}
          MIGOLF_PASS_3: ${{ secrets.MIGOLF_PASS_3 }}
          PREFERRED_DAY:  ${{ secrets.PREFERRED_DAY }}
          PREFERRED_TIME: ${{ secrets.PREFERRED_TIME }}
          PYTHONUNBUFFERED: "1"       # <-- live logs
        run: |
          set -euo pipefail
          # Guard scheduled runs so we only proceed when it is ~18:40 Australia/Sydney
          if [ "${{ github.event_name }}" = "schedule" ]; then
            WINDOW_START=$((18 * 60 + 40))
            WINDOW_END=$((19 * 60 + 2))
            while true; do
              SYD_HOUR=$(TZ=Australia/Sydney date +%H)
              SYD_MIN=$(TZ=Australia/Sydney date +%M)
              SYD_TOTAL_MINUTES=$((10#$SYD_HOUR * 60 + 10#$SYD_MIN))

              if [ "$SYD_TOTAL_MINUTES" -lt "$WINDOW_START" ]; then
                REMAIN_MINUTES=$((WINDOW_START - SYD_TOTAL_MINUTES))
                # Sleep in shorter chunks (max 5 minutes) so logs stay active.
                if [ "$REMAIN_MINUTES" -gt 5 ]; then
                  SLEEP_SECONDS=$((5 * 60))
                else
                  SLEEP_SECONDS=$((REMAIN_MINUTES * 60))
                fi
                if [ "$SLEEP_SECONDS" -le 0 ]; then
                  SLEEP_SECONDS=30
                fi
                echo "Booking guard: ${SYD_HOUR}:${SYD_MIN} Sydney. Sleeping ${SLEEP_SECONDS}s until 18:40."
                sleep "$SLEEP_SECONDS"
                continue
              fi

              if [ "$SYD_TOTAL_MINUTES" -gt "$WINDOW_END" ]; then
                echo "Booking guard: already past 19:02 Sydney (current=${SYD_HOUR}:${SYD_MIN}). Proceeding immediately."
                break
              fi

              echo "Booking guard: inside booking window (current=${SYD_HOUR}:${SYD_MIN} Sydney)."
              break
            done
            echo "Booking guard: proceeding at $(TZ=Australia/Sydney date '+%Y-%m-%d %H:%M:%S %Z')."
          else
            echo "Booking guard: manual run; skipping Sydney-time wait."
          fi
          echo "=== Chrome versions ==="
          google-chrome --version || true
          chromedriver --version || true
          echo "=== Starting booking_script.py ==="
          python -u booking_script.py --really-book
          echo "=== Script finished ==="

      - name: Upload run logs (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: run-artifacts
          path: |
            ${{ env.HOME }}/golfbot_logs/**
            logs/**
            evidence/**
            **/*.html
            **/*.png
          if-no-files-found: ignore
